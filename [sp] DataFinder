import java.io.File;
import java.io.IOException;

import lcp.Util;
// #1
public class DataFinder {

	public void find(String code, String filePath) throws IOException {
		
		String result = "";
		
		String prefix = code + "#";
		File dataFolder = new File("data");
		for (File dataFilex: dataFolder.listFiles()) {
			String content = Util.read(dataFilex.getAbsolutePath());
			String[] lines = content.split("\n");
			for (String linex: lines)
				if (linex.startsWith(prefix))
					result = result + dataFilex.getName() + "#" + linex.substring(7) + "\n";
		}
		
		Util.write(filePath, result);
	}
}

//#2
public class DataFinder {
	
	private final Map<String, List<DataInfo>> dataInfosPerCode;			// Ctrl+Shift+O

	public DataFinder() throws IOException {

		dataInfosPerCode = new HashMap<>();
		
		File dataFolder = new File("data");
		for (File dataFilex: dataFolder.listFiles()) {
			String content = Util.read(dataFilex.getAbsolutePath());
			String[] lines = content.split("\n");
			for (String linex: lines) {
				String code = linex.substring(0, 6);
				String data = linex.substring(7);
				
				List<DataInfo> dataInfos = dataInfosPerCode.get(code);
				if (dataInfos == null) {
					dataInfos = new ArrayList<>();
					dataInfosPerCode.put(code,  dataInfos);
				}
				dataInfos.add(new DataInfo(dataFilex.getName(), data));
			}
		}
		
	public void find(String code, String filePath) throws IOException {
		
		String result = "";
		
		List<DataInfo> dataInfos = dataInfosPerCode.get(code);
		if (dataInfos != null)
			for (DataInfo dataInfox: dataInfos)
				result = result + dataInfox.getFileName() + "#" + dataInfox.getData() + "\n";
		
		Util.write(filePath, result);
	}
}
