import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;



public class Prob5Runner {

	public static void main(String[] args) throws IOException {

		ServerSocket server = new ServerSocket(12345);

		while (true) {
			System.out.println("Waiting Connect ..");
			
			Socket            socket            = server.accept();
			InputStream       inputStream       = socket.getInputStream();
			InputStreamReader inputStreamReader = new InputStreamReader(inputStream);
			BufferedReader    bufferedReader    = new BufferedReader(inputStreamReader);

			// Code 1
//			String code = bufferedReader.readLine();

			// Code 2
//			char[] codeChar = new char[6];
//			bufferedReader.read(codeChar);
//			String code = new String(codeChar);
			
			// Code 3
			char[] codeChar = new char[6];
			int    length   = bufferedReader.read(codeChar);
			String code     = new String(codeChar, 0, length);
			
			System.out.println("CODE : " + code);
//			System.out.println("CODE : [" + code + "] " + (int)code.charAt(0) + " / " + (int)code.charAt(1));
			
			if (!"q".equals(code))
				new DataFinder().find(code, "prob5_" + code + ".txt");
			
			OutputStream       outputStream       = socket.getOutputStream();
			OutputStreamWriter outputStreamWriter = new OutputStreamWriter(outputStream);
			PrintWriter        printWriter        = new PrintWriter(outputStreamWriter);
			
			printWriter.print("OK");
			printWriter.flush();
			
			printWriter.close();
			outputStreamWriter.close();
			outputStream.close();
			bufferedReader.close();
			inputStreamReader.close();
			inputStream.close();
			socket.close();
			
			if ("q".equals(code)) break;
		}

		server.close();
		System.out.println("Completed.");
	}
}
